services:

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      # - "80:80"
      - "5000:443"
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - user_manage
      - match_making
    networks:
      - app_network
  match_making:
    build:
      context: ./backend/Match_making
      dockerfile: Dockerfile
    volumes:
      - ./backend/Match_making:/app
    ports:
      - "25566:25566"
    depends_on:
      - db
    networks:
      - app_network

  user_manage:
    build:
      context: ./backend/User_manage
      dockerfile: Dockerfile
    env_file:
      - ./backend/User_manage/.env
    volumes:
      - ./backend/User_manage:/app
    ports:
      - "9000:9000"
    depends_on:
      - postgres
      - db
    networks:
      - app_network
  postgres:
      image: postgres
      restart: always
      environment: 
        - POSTGRES_DB=db1  
        - POSTGRES_USER=root
        - POSTGRES_PASSWORD=root
      ports: 
          - "5432:5432"
      volumes: 
          - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
      networks:
        - database_network

  pgadmin-compose:
      image: dpage/pgadmin4
      environment: 
          PGADMIN_DEFAULT_EMAIL: "admin@gmail.com"
          PGADMIN_DEFAULT_PASSWORD: "admin"
      ports: 
          - "16543:80"
      depends_on: 
          - postgres
      networks:
        - database_network
  db: #match making
    image: postgres:15  # Updated to version 15
    environment:
      - MATCH_DB=userdb
      - MATCH_USER=dbuser
      - MATCH_PASSWORD=dbpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
  database_network:
    driver: bridge


volumes:
  postgres_data:

# docker stop $(docker ps -aq) && docker rm -f $(docker ps -aq)

